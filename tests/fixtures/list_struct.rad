
fn iterate!(f, T)(lst: List!T) @inline: 
  i := 0
  while i < lst.length:
    f(lst[i])
    i += 1
    
type Thing:
  x : int
  y : int

fn foo(thing: Thing, z: int):
  print(thing.x + z)

fn main():

  things := [Thing(1, 2), Thing(3, 2)]
  print(things[0].x + things[1].y)
  
  for thing in things:
    print(thing.x + thing.y)