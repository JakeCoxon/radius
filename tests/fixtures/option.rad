import compiler for Option, Some, None, assert

fn is_some!(T)(x: Option!T) -> bool @inline:
  if x is Some:
    return true
  return false

fn main():
  let a : Option!int
  a = 78

  let b : Option!int = 124

  let x = None!int()
  let y = Some(10)
  # let g = 10.Some

  let v: Option!int = None()
  # let v2 = None()
  print(v)

  y = Some(32)

  if y is Some:
    print(y.value + 123)
  else:
    print("None")

  print(x)
  print(y)

  let z = x.orelse 69
  let w = y.orelse 100
  print(z + w)

  let asd = { x? + y? }.orelse 3
  assert(asd == 3)

  x = 16

  let asd2 = { x? + y? }.orelse 3
  assert(asd2 == 48)

  print({ x? + y? })

  let asd3 = { 2 + 3 }
  print(asd3)

  # let x = ifx {
  #   x? + y?
  # } else {
  # }

  if x.is_some:
    print(x)
  else:
    print("None", x)

  x = None!int()


  let u = x.orelse return
  print(u)
  print("Should not print")
  assert(1 == 0)
