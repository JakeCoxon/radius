import compiler for overloaded, add_external_library, add_macos_framework
import vec for vec2

# fn render_app() @external
fn frame_ticks() -> int @external
# fn set_pixel(x: int, y: int, color: int) @external
# fn get_pixel(x: int, y: int) -> int @external
# fn fill_rect(x: int, y: int, w: int, h: int, color: int) @external
fn delay(milliseconds: int) @external
fn copy_pixels(source_x: int, source_y: int, w: int, h: int, dest_x: int, dest_y: int) @external

fn begin_path() @external
fn close_path() @external

fn get_mouse_x() -> int @external
fn get_mouse_y() -> int @external
fn get_key_down(key: int) -> bool @external
fn get_mouse_down(button: int) -> bool @external

fn get_mouse() -> vec2:
  vec2(float(get_mouse_x()), float(get_mouse_y()))

fn save() @external
fn restore() @external

fn rotate(angle_radians: float) @external
fn set_line_width(width: float) @external
fn fill() @external
fn stroke() @external
fn put_float_image_data(image: rawptr, width: int, height: int, stride: int, x: int, y: int) @external

fn rotate_at_origin(angle_radians: float, x: float, y: float):
  translate(x, y)
  rotate(angle_radians)
  translate(-x, -y)

@@external("translate")
fn translate_xy(x: float, y: float) @external
fn translate_vec2(pos: vec2):
  translate_xy(pos.x, pos.y)
translate :: overloaded([translate_xy, translate_vec2])

@@external("fill_rectangle")
fn fill_rectangle_xywh(x: float, y: float, w: float, h: float) @external
fn fill_rectangle_vec2_vec2(pos: vec2, size: vec2):
  fill_rectangle_xywh(pos.x, pos.y, size.x, size.y)
fill_rectangle :: overloaded([
  fill_rectangle_xywh, fill_rectangle_vec2_vec2])

@@external("move_to")
fn move_to_xy(x: float, y: float)
fn move_to_vec2(vec: vec2): move_to_xy(vec.x, vec.y)
move_to :: overloaded([
  move_to_xy, move_to_vec2])

@@external("line_to")
fn line_to_xy(x: float, y: float) @external
fn line_to_vec2(vec: vec2): line_to_xy(vec.x, vec.y)
line_to :: overloaded([
  line_to_xy, line_to_vec2])

@@external("set_fill_color")
fn set_fill_color_rgba(r: float, g: float, b: float, a: float) @external
fn set_fill_color_vec4(color: vec4):
  set_fill_color_rgba(color.r, color.g, color.b, color.a)
set_fill_color :: overloaded([
  set_fill_color_rgba, set_fill_color_vec4])

@@external("set_stroke_color")
fn set_stroke_color_rgba(r: float, g: float, b: float, a: float) @external
fn set_stroke_color_vec4(color: vec4):
  set_stroke_color_rgba(color.r, color.g, color.b, color.a)
set_stroke_color :: overloaded([
  set_stroke_color_rgba, set_stroke_color_vec4])

comptime:
  add_external_library("graphicslib")
  add_external_library("c++")
  add_macos_framework("Cocoa")
  add_macos_framework("QuartzCore")
  add_macos_framework("OpenGL")
